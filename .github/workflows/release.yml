name: CI/CD

on:
  push:
    branches:
      - main
      - feat_sync

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.cache/yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install Dependencies
        run: |
          yarn install

      - name: Run Packages Tests
        run: |
#          yarn run test skip

      - name: Build Packages
        run: |
          lerna run --scope='@pagenote/*' --include-dependencies build

      - name: Set Git Identity
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Lerna Version
        run: |
          npx lerna version --no-private patch --yes

      - name: Set npm registry and token
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" > ~/.npmrc


      - name: Publish to NPM
        run: |
          npx lerna publish from-git --yes --conventional-commits --conventional-graduate
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
